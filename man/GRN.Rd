% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/GRN.R
\name{GRN}
\alias{GRN}
\title{Constructing Gene Regulatory Network (GRN)}
\usage{
GRN(
  expr,
  reg = TFs$TF_name,
  rowSample = FALSE,
  K = "sqrt",
  nbTrees = 1000,
  importanceMeasure = "IncNodePurity",
  trace = FALSE,
  BPPARAM = bpparam(),
  maxMSE = NULL,
  minR = 0.3,
  ...
)
}
\arguments{
\item{expr}{Gene expression data, either a matrix or a data frame.
By default (\code{rowSample = FALSE}), each row represents a gene,
each column represents a sample.}

\item{reg}{vector of charactors, representing gene regulators.
By default, these are transcription factors and co-factors,
defined by three literatures/databases, namely RegNet, TRRUST, and
Marbach2016.}

\item{rowSample}{logical If \code{TRUE}, each row represents a sample.
The default is \code{FALSE}.}

\item{K}{integer or character. The number of features in each tree,
can be either a integer number, \code{sqrt}, or \code{all}.
\code{sqrt} denotes sqrt(the number of \code{reg}), \code{all}
means the number of \code{reg}. The default is \code{sqrt}.}

\item{nbTrees}{integer. The number of trees. The default is 1000.}

\item{importanceMeasure}{character. The importance type in
\code{importance}. importanceMeasure can be \code{\%IncMSE}  or
\code{IncNodePurity}, corresponding to type = 1 and 2 in
\code{importance}. The default is \code{IncNodePurity}
(decrease in node impurity), which is faster than \code{\%IncMSE}
(decrease in accuracy).}

\item{trace}{logical. To show the progress or not (default).}

\item{BPPARAM}{parameters for parallel computing (default is
\code{bpparam()}).}

\item{maxMSE}{numeric. The maximum out-of-bag MSE is to control model
accuracy. The default is NULL, which means no filtering by this parameter.}

\item{minR}{numeric. The minimum correlation coefficient of prediction is to
control model accuracy. The default is 0.3.}

\item{...}{the rest parameters in \code{\link{randomForest}} function.}
}
\value{
A list of 'weightHi' and 'performanceHi'. 'weightHi' is the edge
weights by high accurate model, and 'performanceHi' is the performances
of high accurate models.
}
\description{
\code{GRN} is a function to construct the GRN network
using random forest algorithm. This method was initially introduced in
GENIE3, but here, GRN support parallel computing. It can control the
model accuracy, and define the regulators in the network.
}
